@model Ben_Project_1.Models.OrderModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrderModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="OrderId" class="control-label"></label>
                <input asp-for="OrderId" class="form-control" readonly />
                <span asp-validation-for="OrderId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" readonly />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderCustomerId" class="control-label"></label>
                <input asp-for="OrderCustomerId" class="form-control" readonly />
                <span asp-validation-for="OrderCustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderCost" class="control-label"></label>
                <input asp-for="OrderCost" class="form-control" readonly />
                <span asp-validation-for="OrderCost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderStoreId" class="control-label" id="DefaultStore"></label>
                <select asp-for="OrderStoreId"
                        asp-items="@(new SelectList(Model.Stores, "IDNumber", "Location"))" class="form-control"></select>
            </div>
            @*<div class="form-group">
                <label asp-for="OrderGames" class="control-label" id="DefaultStore"></label>
                <select asp-for="OrderGames"
                        asp-items="@(new SelectList(Model.OrderGames, "GameId", "Game.Name"))" class="form-control"></select>
            </div>*@
            @for (int i = 0; i < Model.OrderGames.Count; i++)
            {
                @Html.HiddenFor(model => Model.OrderGames[i].OrderId)
                @Html.HiddenFor(model => Model.OrderGames[i].GameId)
                @Html.HiddenFor(model => Model.OrderGames[i].Edition)
                @Html.HiddenFor(model => Model.OrderGames[i].GameQuantity)
                @Html.HiddenFor(model => Model.OrderGames[i].Price)
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary btn-lg" />
            </div>
        </form>
        <div>
            <form asp-action="AddGames" method="get">
                <!-- other non-hidden form fields -->
                @for (int i = 0; i < Model.OrderGames.Count; i++)
                {
                    @Html.HiddenFor(model => Model.OrderGames[i].OrderId)
                    @Html.HiddenFor(model => Model.OrderGames[i].GameId)
                    @Html.HiddenFor(model => Model.OrderGames[i].Edition)
                    @Html.HiddenFor(model => Model.OrderGames[i].GameQuantity)
                }
                <input type="submit" value="Add Game" class="btn btn-info" />
            </form>
        </div>
    </div>
</div>
@if (Model.OrderGames != null)
{
    @foreach (var item in Model.OrderGames)
    {
    <tr>
        @* Razor views have "tag helpers" (like <a asp-for...>, <form asp-action...>) *@
        @* they also have "HTML helpers" that do the same things, but they look like C# *@
        <td>
            @Html.DisplayFor(modelItem => item.Game.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GameQuantity)
        </td>
        <td>
            @if (item.Edition == 1)
            {
                <p>Standard Edition</p>
            }
            else if (item.Edition == 2)
            {
                <p>Advanced Edition</p>
            }
            else if (item.Edition == 3)
            {
                <p>Deluxe Edition</p>
            }
            else
            {
                <p>Invalid Edition</p>
            }

        </td>
    </tr>
    }
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
